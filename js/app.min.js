/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ([
/* 0 */,
/* 1 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   burgerClose: () => (/* binding */ burgerClose),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const burger = () => {
    const menuIcon = document.querySelector('.header__menu-icon');
    const menuBody = document.querySelector('.menu__body');
    const body = document.querySelector('body');

    if (menuIcon) {
        menuIcon.addEventListener("click", function () {
            body.classList.toggle('_lock');
            menuIcon.classList.toggle('_active');
            menuBody.classList.toggle('_active');

            if (!menuIcon.classList.contains('_active')) {
                menuIcon.classList.add('_inactive');
            } else {
                menuIcon.classList.remove('_inactive');
            }
        })
    }
}

const burgerClose = () => {
    const menuIcon = document.querySelector('.header__menu-icon');
    const menuBody = document.querySelector('.menu__body');
    const body = document.querySelector('body');

    if (menuIcon.classList.contains('_active')) {
        body.classList.remove('_lock');
        menuIcon.classList.remove('_active');
        menuIcon.classList.add('_inactive');
        menuBody.classList.remove('_active');
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (burger);

/***/ }),
/* 2 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const appHeight = () => {
    const doc = document.documentElement;
    doc.style.setProperty('--app-height', `${window.innerHeight}px`);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (appHeight);

/***/ }),
/* 3 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const moveElement = () => {
    const elementsToMove = document.querySelectorAll('[data-move]');

    if (elementsToMove.length > 0) {
        for (let index = 0; index < elementsToMove.length; index++) {
            const element = elementsToMove[index];
            const elementName = element.dataset.move.split(', ')[0];
            const screenWidth = element.dataset.move.split(', ')[1];
            const firstPosition = document.querySelector(`[data-desk*=${elementName}]`);
            const lastPosition = document.querySelector(`[data-mob*=${elementName}]`);

            function move() {
                let position;
                if (window.innerWidth <= screenWidth) {
                    if (lastPosition.dataset.mob.split(', ')[1]) {
                        position = lastPosition.dataset.mob.split(', ')[1];
                    } else {
                        position = 'append';
                    }
                    moveObj(element, lastPosition, position);
                } else {
                    if (firstPosition.dataset.desk.split(', ')[1]) {
                        position = firstPosition.dataset.desk.split(', ')[1];
                    } else {
                        position = 'append';
                    }
                    moveObj(element, firstPosition, position);
                }
            }

            function moveObj($elem, $target, $position = 'append') {
                if ($position == 'after') {
                    $target.after($elem);
                } else if ($position == 'before') {
                    $target.before($elem);
                } else if ($position == 'append') {
                    $target.append($elem);
                } else if ($position == 'prepend') {
                    $target.prepend($elem);
                }
            }

            move();

            window.addEventListener('resize', function () {
                move();
            });
        }
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (moveElement);

/***/ }),
/* 4 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const lazy = () => {
    const lazyBlocks = document.querySelectorAll('.lazy');

    const imageObserver = new IntersectionObserver((entries, observer) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                const target = entry.target;
                showImages(target);
                observer.unobserve(target);
            }
        });
    }, {
        threshold: 0
    });

    lazyBlocks.forEach(lazyBlock => {
        imageObserver.observe(lazyBlock);
    });

    const showImages = (target) => {
        const images = target.querySelectorAll('img[data-src], source[data-srcset]');

        if (images.length) {
            images.forEach((image) => {
                if (image.dataset.src) {
                    image.setAttribute('src', image.dataset.src);
                    image.removeAttribute('data-src');
                }
                if (image.dataset.srcset) {
                    image.setAttribute('srcset', image.dataset.srcset);
                    image.removeAttribute('data-srcset');
                }
            });
        }
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (lazy);

/***/ }),
/* 5 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   modalClose: () => (/* binding */ modalClose)
/* harmony export */ });
const modal = () => {
    const popupLinks = document.querySelectorAll('[data-modal]'); //Ссылка на Popup
    const body = document.querySelector('body'); // Тег body
    const lockPadding = document.querySelectorAll('.lock-padding');
    const timeout = 800; //Равна длительности анимации в CSS

    let unlock = true;

    if (popupLinks.length > 0) {
        for (let index = 0; index < popupLinks.length; index++) {
            const popupLink = popupLinks[index];
            popupLink.addEventListener('click', function (e) {
                const popupName = popupLink.dataset.modal;
                const currentPopup = document.getElementById(popupName);
                popupOpen(currentPopup);
                e.preventDefault();
            });
        }
    }

    const popupCloseIcon = document.querySelectorAll('.popup__close');
    if (popupCloseIcon.length > 0) {
        for (let index = 0; index < popupCloseIcon.length; index++) {
            const el = popupCloseIcon[index];
            el.addEventListener('click', function (e) {
                popupClose(el.closest('.modal'));
                e.preventDefault();
            });
        }
    }

    const popupOpen = (currentPopup) => {
        if (currentPopup && unlock) {
            const popupActive = document.querySelector('.modal._active');
            if (popupActive) {
                popupClose(popupActive, false);
            } else {
                bodyLock();
                //hideMenu()
            }
            currentPopup.classList.add('_active');
            currentPopup.addEventListener('click', function (e) {
                if (!e.target.closest('.modal__content')) {
                    popupClose(e.target.closest('popup'));
                }
            });
        }
    }

    const popupClose = (popupActive, doUnlock = true) => {
        if (unlock) {
            const popupActive = document.querySelector('.modal._active');
            popupActive.classList.remove('_active');
            if (doUnlock) {
                bodyUnlock();
            }
        }
    }

    const bodyLock = () => {
        const lockPaddingValue = window.innerWidth - document.querySelector('.wrapper').offsetWidth + 'px';

        if (lockPadding.length > 0) {
            for (let index = 0; index < lockPadding.length; index++) {
                const el = lockPadding[index];
                el.style.paddingRight = lockPaddingValue;
            }
        }
        body.style.paddingRight = lockPaddingValue;
        body.classList.add('_lock');

        unlock = false;
        setTimeout(function () {
            unlock = true;
        }, timeout);
    }

    const bodyUnlock = () => {
        setTimeout(function () {
            if (lockPadding.length > 0) {
                for (let index = 0; index < lockPadding.length; index++) {
                    const el = lockPadding[index];
                    el.style.paddingRight = '0px';
                }
            }
            body.style.paddingRight = '0px';
            body.classList.remove('_lock');
        }, timeout);

        unlock = false;
        setTimeout(function () {
            unlock = true;
        }, timeout);
    }

    //const hideMenu = () => {
    //    const menu = document.querySelector('.menu');
    //    const menuIcon = document.querySelector('.menu-icon');
    //    const openMenu = document.querySelector(".btn-open");
    //    const closeMenu = document.querySelector(".btn-close");

    //    if (menu.classList.contains('_active')) {
    //        menu.classList.remove('_active')
    //    }

    //    if (menuIcon.classList.contains('_active')) {
    //        menuIcon.classList.remove('_active')
    //        openMenu.classList.toggle("btn-back");
    //        closeMenu.classList.toggle("btn-front");
    //    }
    //}
}

const modalClose = () => {
    const body = document.querySelector('body');
    const modals = document.querySelectorAll('.modal');
    const timeout = 800;

    setTimeout(function () {
        body.classList.remove('_lock');
        body.style.paddingRight = '0px';
    }, timeout);

    if (modals.length) {
        modals.forEach((modal) => {
            modal.classList.remove('_active');
        });
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (modal);

/***/ }),
/* 6 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const checkbox = () => {
    const checkbox = document.querySelectorAll('.checkbox');

    if (checkbox.length > 0) {
        for (let index = 0; index < checkbox.length; index++) {
            const check = checkbox[index];
            const input = check.querySelector('input');
            if (input.checked) {
                check.classList.add('active');
            }

            check.addEventListener('click', function () {
                if (check.classList.contains('active')) {
                    check.classList.remove('active');
                    input.checked = false;
                } else {
                    check.classList.toggle('active');
                    input.checked = true;
                }
            })
        }
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (checkbox);

/***/ })
/******/ 	]);
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
(() => {
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _modules_functions_burger_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
/* harmony import */ var _modules_functions_appHeight_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2);
/* harmony import */ var _modules_functions_moveElement_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(3);
/* harmony import */ var _modules_functions_lazy_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(4);
/* harmony import */ var _modules_page_modal_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(5);
/* harmony import */ var _modules_form_checkbox_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(6);




// import tabs from './modules/page/tabs.js';




const langSwitcher = (btn) => {
    const langBtns = document.querySelectorAll('.lang__btn');

    langBtns.forEach((langBtn) => {
        langBtn.classList.remove('active');
    });

    btn.classList.add('active');
}

const rangeSingle = () => {
    const ranges = document.querySelectorAll('.range-single');

    if (ranges.length) {
        ranges.forEach((range) => {
            const input = range.querySelector('input');
            const thumb = range.querySelector('.range-single__thumb');
            const value = range.closest('.form-calc__item').querySelector('span');
            let percent;

            percent = ((input.value - input.min) / (input.max - input.min) * 100);
            thumb.style.left = percent + '%';

            input.addEventListener('input', () => {
                input.value = Math.min(parseInt(input.value));
                percent = ((input.value - input.min) / (input.max - input.min) * 100);
                thumb.style.left = percent + '%';
                value.innerHTML = input.value;
            });
        });
    }
}

const playPromoVideo = (btn) => {
    const video = btn.previousElementSibling;

    if (video.paused) {
        video.play();
    } else {
        video.pause();
    }
}

;(0,_modules_functions_burger_js__WEBPACK_IMPORTED_MODULE_0__["default"])();
(0,_modules_functions_appHeight_js__WEBPACK_IMPORTED_MODULE_1__["default"])();
(0,_modules_functions_lazy_js__WEBPACK_IMPORTED_MODULE_3__["default"])();
(0,_modules_form_checkbox_js__WEBPACK_IMPORTED_MODULE_5__["default"])();
(0,_modules_page_modal_js__WEBPACK_IMPORTED_MODULE_4__["default"])();
(0,_modules_functions_moveElement_js__WEBPACK_IMPORTED_MODULE_2__["default"])();
rangeSingle();

window.addEventListener('resize', () => {
    (0,_modules_functions_appHeight_js__WEBPACK_IMPORTED_MODULE_1__["default"])();
});

document.addEventListener('click', (e) => {
    // ----------- Tabs -------------
    // const tabsLink = e.target.closest('.tabs__link');
    // if (tabsLink) {
    //     tabs(tabsLink, e);
    // }

    const langBtn = e.target.closest('.lang__btn');
    if (langBtn) {
        langSwitcher(langBtn);
    }

    const playBtn = e.target.closest('.promo__play');
    if (playBtn) {
        playPromoVideo(playBtn);
    }
});

document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape') {
        (0,_modules_functions_burger_js__WEBPACK_IMPORTED_MODULE_0__.burgerClose)();
        (0,_modules_page_modal_js__WEBPACK_IMPORTED_MODULE_4__.modalClose)();
    }
});

const sertificates = new Swiper('.sertificates__slider', {
    observer: true,
    observeParents: true,
    observeSlideChildren: true,
    slidesPerView: 'auto',
    spaceBetween: 16,
    navigation: {
        prevEl: ".sertificates__navigation .navigation__prev",
        nextEl: ".sertificates__navigation .navigation__next",
    },
    pagination: {
        el: '.sertificates__pagination',
        type: 'bullets',
        clickable: true,
    },
});

const others = new Swiper('.others__slider', {
    observer: true,
    observeParents: true,
    observeSlideChildren: true,
    slidesPerView: 1,
    spaceBetween: 32,
    navigation: {
        prevEl: ".others__navigation .navigation__prev",
        nextEl: ".others__navigation .navigation__next",
    },
    pagination: {
        el: '.others__pagination',
        type: 'bullets',
        clickable: true,
    },
    breakpoints: {
        768: {
            slidesPerView: 2,
        },
        993: {
            slidesPerView: 3,
        },
    }
});

const caseThumbs = new Swiper('.thumbs__slider', {
    observer: true,
    observeParents: true,
    observeSlideChildren: true,
    slidesPerView: 3,
    spaceBetween: 16,
    centerInsufficientSlides: true,
});
const caseSlider = new Swiper('.image-case__slider', {
    observer: true,
    observeParents: true,
    observeSlideChildren: true,
    slidesPerView: 1,
    centerInsufficientSlides: true,
    navigation: {
        nextEl: '.case__next',
        prevEl: '.case__prev',
    },
    pagination: {
        el: ".case__pagination",
        clickable: true,
    },
    thumbs: {
        swiper: caseThumbs,
    },
});

$(document).ready(function () {

    $(".sertificates__image").fancybox({
        'centerOnScroll': true,
        'padding': 0,
    });

});
})();

/******/ })()
;